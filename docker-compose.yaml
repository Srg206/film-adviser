version: "3.8"
services:
  postgres:
    container_name: postgres
    image: postgres:16.2
    restart: unless-stopped
    env_file:
     - .env
    environment:
        TZ: 'GMT+3'
        PGTZ: 'GMT+3'
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - app-network
  
  adminer:
    container_name: adminer-container
    image: adminer:latest
    restart: unless-stopped
    ports:
      - 8080:8080
    networks:
      - app-network

  backend:
    container_name: go-app
    env_file:
     - .env
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}

    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - "8000:8000"


    depends_on:
      - postgres  
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
  
